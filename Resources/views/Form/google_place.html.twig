{% block google_place_widget %}
    {% set attr = attr|merge({autocomplete:'off'}) %}

    {{ block('form_widget_simple') }}

    <script>
        (function () {
            let inputPlace = document.getElementById('{{ form.vars.id }}');
            let options = {{ options|json_encode()|raw }};
            let autocomplete;

            inputPlace.addEventListener('keydown', init);

            function init(event) {
                let input = event.target;

                if (input.dataset.country) {
                    let country = document.getElementById(input.dataset.country);

                    if (-1 !== country.selectedIndex) {
                        options.componentRestrictions['country'] = country.options[country.selectedIndex].getAttribute('data-code');
                    }

                    {# Reset Google Autocomplete #}
                    country.addEventListener('change', function () {
                        google.maps.event.clearListeners(autocomplete, 'place_changed');
                        input.addEventListener('keydown', init);
                        input.dispatchEvent(new Event('reset'));
                    });
                }

                autocomplete = new google.maps.places.Autocomplete(input, options);
                autocomplete.addListener('place_changed', onPlaceChange);
                input.removeEventListener('keydown', init); // Only once
            }

            function onPlaceChange() {
                inputPlace.autocompleteData = autocomplete;
                inputPlace.dispatchEvent(new Event('place_changed'));
            }
        })();
    </script>

    {% if api is defined and api is not null %}
        {{ api|raw }}
    {% endif %}
{% endblock %}
