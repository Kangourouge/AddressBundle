{% block google_search_widget %}
    {{ block('form_widget') }}

    <script type="text/javascript">
        (function(){
            var inputLocation = document.getElementById('{{ form.location.vars.id }}');
            var inputPlace = document.getElementById('{{ form.place.vars.id }}');

            inputLocation.addEventListener('place_changed', onPlaceChange);
            inputLocation.addEventListener('keydown', handleKeys);
            inputLocation.addEventListener('keyup', handleKeys);

            function onPlaceChange(event) {
                fillInput(event.target.autocompleteData.getPlace());
            }

            function fillInput(data) {
                var place = {};

                place['address_components'] = data.address_components;
                place['formatted_address'] = data.formatted_address;
                place['coordinate'] = {};
                if (data.geometry) {
                    place['coordinate']['latitude'] = data.geometry.location.lat();
                    place['coordinate']['longitude'] = data.geometry.location.lng();
                }
                place['types'] = data.types;
                place['vicinity'] = data.vicinity;
                inputPlace.value = JSON.stringify(place);
            }

            {# Select first available place #}
            function searchPlaces() {
                var results = document.getElementsByClassName('pac-item');
                if (results === 'undefined') {
                    return false;
                }
                var firstResult = document.getElementsByClassName('pac-item')[0].childNodes;
                var placeName = firstResult[1].textContent;
                var placeAddress = firstResult[2].textContent;
                var geocoder = new google.maps.Geocoder();

                geocoder.geocode({'address': placeName + ' ' + placeAddress}, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        if (results[0]) {
                            fillInput(results[0]);
                            inputLocation.value = results[0].formatted_address;
                        }
                    }
                });
            }

            function handleKeys(event) {
                if (event.keyCode === 13) {
                    event.preventDefault();

                    return searchPlaces();
                }

                inputPlace.value = '';
            }
        })();
    </script>
{% endblock %}
